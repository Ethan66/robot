(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{466:function(t,e,a){"use strict";a.r(e);var s=a(1),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vue从创建到挂载的过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue从创建到挂载的过程"}},[t._v("#")]),t._v(" vue从创建到挂载的过程")]),t._v(" "),e("h2",{attrs:{id:"初始化vue实例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化vue实例"}},[t._v("#")]),t._v(" 初始化vue实例")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://nlrx-wjc.github.io/Learn-Vue-Source-Code/lifecycle/newVue.html#_1-%E5%89%8D%E8%A8%80",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[t._v("代码: vue-learn-code/Vue2.5.16/lifecycle.html。")]),t._v(" "),e("li",[t._v("执行new Vue(options)，执行vue._init(options)。")])]),t._v(" "),e("h2",{attrs:{id:"beforecreate之前"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beforecreate之前"}},[t._v("#")]),t._v(" beforeCreate之前")]),t._v(" "),e("blockquote",[e("p",[t._v("初始化Vue实例时，执行vue._init()方法，调用mergeOptions()方法，校验配置的options的规范，如果配置项里有mixins，递归调用mergeOptions方法，把mixins的配置项匹配给parent，再遍历配置的options，把每项与父级构造函数的options属性进行合并（如果childVal不存在，就返回parentVal,如果存在，就把childVal添加到parentVal后，比如生命钩子，所以mixins里的生命周期早于当前实例执行），将得到一个新的options选项赋值给$options属性。再执行beforeCreate钩子，此时还没有$el和$data。\n所以beforeCreate之前是将options配置项检验合并。")])]),t._v(" "),e("h3",{attrs:{id:"vue-init"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-init"}},[t._v("#")]),t._v(" vue._init()")]),t._v(" "),e("ul",[e("li",[t._v("_init方法初始化一些属性，vm._uid（唯一id）, vm._self = vm, vm._isVue = true。")]),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/vue/lifeCycle.html#mergeoptions"}},[t._v("调用mergeOptions()")]),t._v("，返回值给$options。")],1),t._v(" "),e("li",[t._v("调用initLifecycle(), 初始化vm.$parent, vm.$root, vm.$children, vm.$refs, vm._watcher等")]),t._v(" "),e("li",[e("code",[t._v("调用callHook(vm, 'beforeCreate')")]),t._v(": 因为mergeOptions已经将parent.beforeCreate和options.beforeCreate都合成一个数组$options.beforeCreate了，所以遍历调用就行了")])]),t._v(" "),e("h3",{attrs:{id:"mergeoptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mergeoptions"}},[t._v("#")]),t._v(" mergeOptions()")]),t._v(" "),e("ul",[e("li",[t._v("mergeOptions(resolveConstructorOptions(vm.constructor), options || {}, vm)")]),t._v(" "),e("li",[t._v("参数：resolveConstructorOptions(vm.constructor): 解析constructor上的options属性，一般为{}，当做parent")]),t._v(" "),e("li",[t._v("参数：options: 配置options")]),t._v(" "),e("li",[t._v("校验options规范：校验子组件components的name规范，props是否是对象数组等")]),t._v(" "),e("li",[t._v("合并mixins: 执行mergeOptions(parent, child.mixins[i], vm)，返回值传给parent")]),t._v(" "),e("li",[t._v("先遍历parent的属性key，执行mergeField(key)")]),t._v(" "),e("li",[t._v("后遍历options的属性key，将parent不存在的属性key进行mergeField(key)")])]),t._v(" "),e("h4",{attrs:{id:"mergefield-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mergefield-key"}},[t._v("#")]),t._v(" mergeField(key)")]),t._v(" "),e("ul",[e("li",[t._v("strats变量：策略者模式，每个key存着相对应的方法，比如strats.el()，strats.data()。取出来赋值给strat变量")]),t._v(" "),e("li",[t._v("执行方法strat()，将parent的key属性的value和options的key属性的value进行合并，返回的值赋值给新的options的属性key")]),t._v(" "),e("li",[t._v("最后return options，跳出mergeOptions()方法")])]),t._v(" "),e("demo-block",{attrs:{options:JSON.parse(decodeURI("%7B%7D"))}},[e("template",{slot:"demo"},[e("div",{staticClass:"code-ts"},[t._v("strats.data()：childVal为options.data, parentVal为parent.data")])]),t._v(" "),e("template",{slot:"source"},[e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergedInstanceDataFn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// instance merge")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" instanceData "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" childVal "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("childVal")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vm"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" childVal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" defaultData "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" parentVal "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("parentVal")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vm"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" parentVal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instanceData"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeData")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instanceData"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" defaultData"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" defaultData\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br")])]),e("a",{staticClass:"tsToJs",attrs:{href:"https://www.typescriptlang.org/play"}},[t._v("Try")])])],2),e("h2",{attrs:{id:"created之前"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#created之前"}},[t._v("#")]),t._v(" created之前")]),t._v(" "),e("blockquote",[e("p",[t._v("调用initState()方法，处理$options里每个属性，先处理props，再给data实现数据响应，最后给computed，watch添加观察者。再执行created钩子。")])]),t._v(" "),e("h3",{attrs:{id:"initinjections-vm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#initinjections-vm"}},[t._v("#")]),t._v(" initInjections(vm)")]),t._v(" "),e("p",[t._v("初始化provide和inject配置")]),t._v(" "),e("h3",{attrs:{id:"initstate-vm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#initstate-vm"}},[t._v("#")]),t._v(" initState(vm)")]),t._v(" "),e("ul",[e("li",[t._v("initProps(vm, opts.props): 判断是否有$options.props，添加观察者模式")]),t._v(" "),e("li",[t._v("initMethods(vm, opts.methods): 判断是否有$options.methods, 初始化事件")]),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/vue/lifeCycle.html#initData"}},[t._v("initData(vm)")])],1),t._v(" "),e("li",[t._v("initComputed(vm, opts.computed): 判断是否有$options.computed，初始化计算属性")]),t._v(" "),e("li",[t._v("initWatch(vm, opts.watch): 判断是否有$options.watch，进行初始化watch")])]),t._v(" "),e("h4",{attrs:{id:"initdata-vm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#initdata-vm"}},[t._v("#")]),t._v(" initData(vm)")]),t._v(" "),e("ul",[e("li",[t._v("判断$options.data是方法还是对象，对象直接给vm._data，否则执行$options.data.call(vm, vm), 返回给vm._data")]),t._v(" "),e("li",[t._v("判断vm_data和$options.props和$options.methods属性是否重复，重复报警告")]),t._v(" "),e("li",[t._v("遍历每个属性执行proxy(vm, '_data', key)，进行数据代理：vm.key指向vm._data.key")]),t._v(" "),e("li",[t._v("对vm._data的每一个属性进行响应化")])]),t._v(" "),e("h3",{attrs:{id:"initprovide-vm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#initprovide-vm"}},[t._v("#")]),t._v(" initProvide(vm)")]),t._v(" "),e("h3",{attrs:{id:"调用callhook-vm-created"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#调用callhook-vm-created"}},[t._v("#")]),t._v(" 调用callHook(vm, 'created')")]),t._v(" "),e("h2",{attrs:{id:"beforemounted之前"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beforemounted之前"}},[t._v("#")]),t._v(" beforeMounted之前")]),t._v(" "),e("blockquote",[e("ol",[e("li",[t._v("vue有2个版本的代码：runtime only（只包含运行时版本）和runtime+compiler（同时包含编译器和运行时的完整代码）。他们的区别就是编译器，将template转化为render函数。实际开发用runtime only，同时借助webpack的vue-loader，通过这工具来将模板编译成render函数。")]),t._v(" "),e("li",[t._v("所以两个版本区别在于：vue.$mount()方法是否将vue.prototype.$mount方法缓存起来，直接执行$mount的就是runtime only版本，否则就是完整版本。完整版先根据传入的el获取dom元素，判断有无配置render函数，没有的话判断配置是否有template模板，是字符串，或者是dom的直接获取innerHtml，没有配置template就是el作为innerHtml。将模板字符串编译成render函数。传给$options.render，再执行原始vue.prototype.$mount()函数。")])])]),t._v(" "),e("h3",{attrs:{id:"vm-mount-vm-options-el"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vm-mount-vm-options-el"}},[t._v("#")]),t._v(" vm.$mount(vm.$options.el)")]),t._v(" "),e("blockquote",[e("p",[t._v("vm.$mount为手动挂载函数")])]),t._v(" "),e("ul",[e("li",[t._v("query(el): 获取dom元素")]),t._v(" "),e("li",[t._v("判断$ptions.render是否存在")]),t._v(" "),e("li",[t._v("不存在$options.render，判断$options.template类型，是字符串（dom的id）或者dom元素，获取innerHTML；没有$options.template，获取$options.el外层的dom的innerHTML，获取template模板字符串")]),t._v(" "),e("li",[t._v("不存在$options.render，将template模板字符串通过"),e("code",[t._v("compileToFunctions()")]),t._v("方法转为render函数，将转化后的render函数赋值给$options.render")]),t._v(" "),e("li",[t._v("执行原先绑定在vue.prototype.$mount的方法，"),e("code",[t._v("mount.call(this, el)")]),t._v("，方法里有"),e("code",[t._v("callHook(vm, 'beforeMount')")]),t._v("，此时还没有跳出mount方法")])]),t._v(" "),e("h3",{attrs:{id:"callhook-vm-beforemount"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#callhook-vm-beforemount"}},[t._v("#")]),t._v(" callHook(vm, 'beforeMount')")]),t._v(" "),e("h2",{attrs:{id:"mounted之前"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mounted之前"}},[t._v("#")]),t._v(" mounted之前")]),t._v(" "),e("ul",[e("li",[t._v("开始挂载前，创建new Watcher(vm, updateComponent)实例watcher，updateComponent为外部定义的方法，将它存在watcher.update中。")]),t._v(" "),e("li",[t._v("执行updateComponent()，方法里先执行vm._render()，获取最新的Vnode节点树，同时获取了vm.data属性，vm.data的属性监听了watcher。此时还没跳出函数，再执行vm._update()方法，此时没有旧的Vnode节点树，直接更新DOM，完成第一次渲染。")]),t._v(" "),e("li",[t._v("执行callHook(vm, 'mounted')")])]),t._v(" "),e("h2",{attrs:{id:"beforeupdate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beforeupdate"}},[t._v("#")]),t._v(" beforeUpdate")]),t._v(" "),e("p",[t._v("修改数据，触发watcher.update方法，判断vm._isMounted === true（已被挂载过了），执行callHook(vm, 'beforeUpdate')，再执行updateComponent()，将最新的Vnode节点树和上一次渲染的Vnode节点树对比，并更新DOM节点（即patch操作），再执行callHook(vm, 'updated')")]),t._v(" "),e("h2",{attrs:{id:"beforedestroy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beforedestroy"}},[t._v("#")]),t._v(" beforeDestroy")]),t._v(" "),e("ul",[e("li",[t._v("执行vm.$destroy方法，执行callHook(vm, 'beforeDestroy')，没有跳出函数。")]),t._v(" "),e("li",[t._v("判断当前实例有父级实例，并且父级实例没有被销毁且不是抽象组件，那么将当前实例从父级实例的$children属性中删除。")]),t._v(" "),e("li",[t._v("移除依赖：遍历vm._watchers，调用每一个watcher的teardown方法。")]),t._v(" "),e("li",[t._v("移除响应式数据的引用：vm._data."),e("strong",[t._v("ob")]),t._v(".vmCount--")]),t._v(" "),e("li",[t._v("移除Vnode: vm."),e("strong",[t._v("patch")]),t._v("(vm._vnode, null)")]),t._v(" "),e("li",[t._v("callHook(vm, 'destroyed')")])])],1)}),[],!1,null,null,null);e.default=n.exports}}]);